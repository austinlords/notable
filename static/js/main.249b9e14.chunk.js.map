{"version":3,"sources":["config.js","services/auth.js","context/AppContext.js","components/NavBar.jsx","components/common/CollectionPreview.jsx","utils/randomColor.js","components/EditorCollections.jsx","components/common/TagsPreview.jsx","components/EditorTags.jsx","components/EditorMenu.jsx","components/DraftEditor.jsx","components/NotesPreview.jsx","components/NotesSearch.jsx","components/NotesFilter.jsx","components/SideBar.jsx","services/notesService.js","services/collectionsService.js","services/demoNotesService.js","services/demoCollectionsService.js","components/Notes.jsx","components/Login/Login.jsx","components/Login/Register.jsx","App.js","index.js"],"names":["module","exports","apiUrl","notesPreviewLength","logout","a","fetch","config","method","credentials","response","status","json","body","toast","message","Error","error","validateUser","user","login","email","password","JSON","stringify","trim","toLowerCase","mode","headers","register","React","createContext","NavBar","AppContext","Consumer","value","e","updateUser","className","to","onClick","style","color","CollectionPreview","fontSize","collection","len","length","colStr","hasOwnProperty","name","slice","linkStyle","fontStyle","cursor","icon","faBook","marginRight","transform","randomColor","Math","random","toString","substr","EditorCollections","state","collectionPopoverOpen","newCollection","onChange","event","setState","target","togglePopover","handleCollectionSelect","note","props","selectedNote","currentTarget","getAttribute","save","collections","find","c","_id","pressEnter","keyCode","Date","now","title","content","convertToRaw","editorState","getCurrentContent","tags","filter","this","textAlign","padding","id","UncontrolledPopover","placement","isOpen","trigger","toggle","PopoverHeader","PopoverBody","key","map","type","checked","data","faMinusCircle","placeholder","marginTop","lineHeight","width","height","onKeyDown","Component","TagsPreview","iconColor","tagLen","tagsStr","join","faTags","EditorTags","tagsPopoverOpen","newTag","handleTagsDelete","tag","t","includes","push","autoFocus","EditorMenu","menuStyle","margin","display","justifyContent","crudStyle","alignItems","metaDataStyle","handleDelete","aria-hidden","DraftEditor","handleTitle","updateSelectedNote","currentEditorContent","controlsStyle","fontFamily","verticalLine","borderRight","focus","editor","handleKeyCommand","_handleKeyCommand","bind","toggleBlockType","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","command","newState","RichUtils","onEditorChange","blockType","inlineStyle","onToggle","blockStyleFn","getBlockStyle","customStyleMap","styleMap","keyBindingFn","mapKeyToEditorCommand","ref","spellCheck","CODE","backgroundColor","block","getType","StyleButton","preventDefault","active","onMouseDown","label","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","NotesPreview","listItemStyle","background","previewStyle","tagsStyle","marginLeft","collectionStyle","borderRadius","writingMode","letterSpacing","fontWeight","individualNotes","gridTemplateColumns","marginBottom","filterNotes","notes","search","searchQuery","n","blocks","el","text","generateSearchPreview","previewText","startIndex","indexOf","endIndex","previewLength","pre","highlight","post","generateTitle","filtered","allNotes","console","log","index","moment","updated","format","NotesSearch","onSearch","onClear","NotesFilter","editMode","collectionsToEdit","toggleEditMode","currentCollections","forEach","updateCollections","handleCollectionDelete","collectionId","handleCollectionEdit","collectionToUpdate","splice","handleColorChange","colorChange","hex","filterStyle","gridTemplateRows","overflow","handleRadioSelect","handleCheckboxSelect","collectionFilter","tagsFilter","Profile","profileDivStyle","profileContentStyle","faUserCircle","Buttons","useState","popoverOpen","setNewCollection","buttonStyle","faPlus","faCheckCircle","faEdit","collectionTagStyle","dropdownTitle","CollectionFilter","dropdownOpen","setDropdownOpen","data-toggle","data-target","aria-expanded","aria-controls","faCaretDown","faCaretRight","paddingLeft","TagFilter","EditCollections","i","aria-label","EditColor","colors","setColors","newColor","setNewColor","swatchStyle","OverlayTrigger","rootClose","overlay","Popover","border","Title","Content","maxLength","position","left","faFillDrip","SideBar","sidebarStyle","tagsOpen","handleDropdownClick","dataTarget","isExpanded","collectionsOpen","selectedTags","newTags","filteredNotes","Set","lowerTags","combinedTags","sort","getNotes","info","col","postNote","updatedNote","putNote","deleteNote","ok","getCollections","postCollection","updatedCollection","putCollection","deleteCollection","DEMONOTES","depth","inlineStyleRanges","entityRanges","offset","entityMap","DEMOCOLLECTIONS","Notes","handleSearch","query","handleClear","action","indexToUpdate","findIndex","notesToChange","newNote","oldNote","match","params","Object","create","existingIndex","isNewCollection","savedNote","redirectId","history","replace","EditorState","createEmpty","errors","NOTES","COLLECTIONS","createWithContent","convertFromRaw","prevProps","Login","setEmail","setPassword","handleLogin","newUser","onSubmit","aria-describedby","required","minLength","form","Register","handleRegister","App","receivedAsyncData","Fragment","Provider","path","render","from","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.249b9e14.chunk.js","sourcesContent":["module.exports = {\r\n  apiUrl: \"https://notes-notable.herokuapp.com/api/\",\r\n  notesPreviewLength: 75\r\n};\r\n","import config from \"../config\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    const response = await fetch(`${config.apiUrl}logout`, {\r\n      method: \"POST\",\r\n      credentials: \"include\"\r\n    });\r\n    if (response.status === 200) {\r\n      let body = await response.json();\r\n      toast(body.message);\r\n      return 200;\r\n    } else {\r\n      throw new Error(\"Could not log out user. Please try again.\");\r\n    }\r\n  } catch (error) {\r\n    toast.error(\"Server error: \", error);\r\n  }\r\n};\r\n\r\nexport const validateUser = async () => {\r\n  try {\r\n    const response = await fetch(config.apiUrl + \"user\", {\r\n      credentials: \"include\"\r\n    });\r\n    if (response.status !== 200) {\r\n      return null;\r\n    } else {\r\n      const user = await response.json();\r\n      return user;\r\n    }\r\n  } catch (error) {\r\n    toast.error(\"Server error: \", error);\r\n  }\r\n};\r\n\r\nexport const login = async (email, password) => {\r\n  try {\r\n    const response = await fetch(`${config.apiUrl}login`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email: email.trim().toLowerCase(),\r\n        password: password.trim()\r\n      }),\r\n      mode: \"cors\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    const user = await response.json();\r\n    if (response.status !== 200) {\r\n      toast.error(user.message);\r\n      return null;\r\n    }\r\n    return user;\r\n  } catch (error) {\r\n    toast.error(\"network error: \", error);\r\n  }\r\n};\r\n\r\nexport const register = async (email, password) => {\r\n  try {\r\n    const response = await fetch(`${config.apiUrl}register`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email: email.trim().toLowerCase(),\r\n        password: password.trim()\r\n      }),\r\n      mode: \"cors\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    const user = await response.json();\r\n    if (response.status !== 200) {\r\n      toast.error(user.message);\r\n      return null;\r\n    }\r\n    return user;\r\n  } catch (error) {\r\n    toast.error(\"network error: \", error);\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nexport default React.createContext({});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../services/auth\";\r\nimport { toast } from \"react-toastify\";\r\nimport AppContext from \"../context/AppContext\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {value => {\r\n        async function handleLogout(e) {\r\n          try {\r\n            const status = await logout();\r\n            if (status === 200) value.updateUser(null);\r\n          } catch (error) {\r\n            return toast.error(error);\r\n          }\r\n        }\r\n\r\n        return (\r\n          <nav className=\"app-navbar\">\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n              Notable\r\n            </Link>\r\n\r\n            <div className=\"\">\r\n              {value.user ? (\r\n                <div>\r\n                  <span\r\n                    className=\"navBar-link clickable\"\r\n                    onClick={handleLogout}\r\n                    style={{ color: \"orange\" }}\r\n                  >\r\n                    Logout\r\n                  </span>\r\n                </div>\r\n              ) : (\r\n                <Link to=\"/login\">Login</Link>\r\n              )}\r\n            </div>\r\n          </nav>\r\n        );\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBook } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CollectionPreview = ({ fontSize, collection, style, length }) => {\r\n  let len = length || 20;\r\n  let colStr = collection.hasOwnProperty(\"name\")\r\n    ? collection.name\r\n    : \"(collection)\";\r\n\r\n  if (colStr.length > len) colStr = colStr.slice(0, len) + \"...\";\r\n\r\n  const linkStyle = {\r\n    color: \"blue\",\r\n    fontStyle: \"italic\",\r\n    cursor: \"pointer\",\r\n    fontSize\r\n  };\r\n\r\n  return (\r\n    <div style={{ ...linkStyle, ...style }}>\r\n      <FontAwesomeIcon\r\n        icon={faBook}\r\n        style={{\r\n          color: \"black\",\r\n          marginRight: \"10px\",\r\n          transform: \"rotate(-20deg)\"\r\n        }}\r\n      />\r\n      <span>{colStr}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollectionPreview;\r\n","export default function randomColor() {\r\n  return (\r\n    \"#\" +\r\n    Math.random()\r\n      .toString(16)\r\n      .substr(-6)\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { convertToRaw } from \"draft-js\";\r\nimport { UncontrolledPopover, PopoverBody, PopoverHeader } from \"reactstrap\";\r\nimport CollectionPreview from \"./common/CollectionPreview\";\r\nimport randomColor from \"./../utils/randomColor\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass EditorCollections extends Component {\r\n  state = {\r\n    collectionPopoverOpen: false,\r\n    newCollection: \"\"\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ newCollection: event.target.value.toLowerCase() });\r\n  };\r\n\r\n  togglePopover = () => {\r\n    this.setState({\r\n      collectionPopoverOpen: !this.state.collectionPopoverOpen\r\n    });\r\n  };\r\n\r\n  handleCollectionSelect = event => {\r\n    const note = { ...this.props.selectedNote };\r\n\r\n    if (event.currentTarget.getAttribute(\"data\") === \"delete\") {\r\n      note.collection = {};\r\n      this.props.save(note);\r\n    } else {\r\n      let { color, _id, name } = this.props.collections.find(\r\n        c => c._id === event.target.value\r\n      );\r\n      note.collection = { _id, name, color };\r\n      this.props.save(note);\r\n    }\r\n  };\r\n\r\n  pressEnter = event => {\r\n    if (event.keyCode !== 13) return;\r\n\r\n    let note = this.props.selectedNote\r\n      ? { ...this.props.selectedNote }\r\n      : {\r\n          _id: Date.now().toString(),\r\n          title: \"\",\r\n          content: convertToRaw(this.props.editorState.getCurrentContent()),\r\n          tags: [],\r\n          collection: {}\r\n        };\r\n    // don't allow duplicate collections\r\n    const newCollection = this.state.newCollection.toLowerCase().trim();\r\n\r\n    const collectionAlreadyExists = !!this.props.collections.filter(\r\n      c => c.name === newCollection\r\n    ).length;\r\n    if (collectionAlreadyExists) return;\r\n\r\n    note.collection = {\r\n      _id: Date.now().toString(),\r\n      name: newCollection,\r\n      color: randomColor()\r\n    };\r\n    this.setState({ newCollection: \"\" });\r\n    this.props.save(note);\r\n  };\r\n\r\n  render() {\r\n    const { selectedNote, collections } = this.props;\r\n\r\n    return (\r\n      <div\r\n        style={{ textAlign: \"right\", padding: \"0px 10px\" }}\r\n        id=\"collection-popover-link\"\r\n        className=\"link-no-underline\"\r\n      >\r\n        <CollectionPreview\r\n          fontSize=\"12px\"\r\n          collection={selectedNote ? selectedNote.collection : {}}\r\n        />\r\n        <UncontrolledPopover\r\n          placement=\"bottom\"\r\n          isOpen={this.state.collectionPopoverOpen}\r\n          target=\"collection-popover-link\"\r\n          trigger=\"legacy\"\r\n          toggle={() => this.togglePopover()}\r\n        >\r\n          <PopoverHeader>select collection:</PopoverHeader>\r\n          <PopoverBody key={selectedNote ? selectedNote.collection.name : \"\"}>\r\n            {collections ? (\r\n              collections.map(c => (\r\n                <div className=\"form-check clickable\" key={c._id}>\r\n                  <label className=\"form-check-label\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"select-collection-choices\"\r\n                      value={c._id}\r\n                      checked={\r\n                        selectedNote\r\n                          ? selectedNote.collection.name === c.name\r\n                          : false\r\n                      }\r\n                      onChange={e => this.handleCollectionSelect(e)}\r\n                    />\r\n                    {c.name}\r\n                  </label>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            {collections.length > 0 &&\r\n            selectedNote &&\r\n            selectedNote.collection.hasOwnProperty(\"_id\") ? (\r\n              <div\r\n                className=\"clickable\"\r\n                style={{ color: \"red\" }}\r\n                onClick={e => this.handleCollectionSelect(e)}\r\n                data=\"delete\"\r\n              >\r\n                <FontAwesomeIcon icon={faMinusCircle} />{\" \"}\r\n                <span>\r\n                  <em>clear collection</em>\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.newCollection}\r\n              onChange={e => this.onChange(e)}\r\n              placeholder=\"new collection...\"\r\n              style={{\r\n                fontSize: \".9rem\",\r\n                marginTop: \"10px\",\r\n                lineHeight: \"1\",\r\n                padding: \"0px .75rem\",\r\n                width: \"150px\",\r\n                height: \"calc(2rem + 2px)\"\r\n              }}\r\n              onKeyDown={this.pressEnter}\r\n            />\r\n            <small>\r\n              <em>press Enter to save</em>\r\n            </small>{\" \"}\r\n          </PopoverBody>\r\n        </UncontrolledPopover>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditorCollections;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTags } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TagsPreview = ({ fontSize, tags, style, length, iconColor }) => {\r\n  let tagLen = length || 40;\r\n  let tagsStr = tags.length > 0 ? tags.join(\", \") : \"(tags)\";\r\n\r\n  if (tagsStr.length > tagLen) tagsStr = tagsStr.slice(0, tagLen) + \"...\";\r\n\r\n  const linkStyle = {\r\n    color: \"orangered\",\r\n    fontStyle: \"italic\",\r\n    cursor: \"pointer\",\r\n    fontSize\r\n  };\r\n\r\n  return (\r\n    <div style={{ ...linkStyle, ...style }}>\r\n      <FontAwesomeIcon\r\n        icon={faTags}\r\n        style={{ color: iconColor, marginRight: \"10px\" }}\r\n      />\r\n      <span>{tagsStr}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagsPreview;\r\n","import React, { Component } from \"react\";\r\nimport { convertToRaw } from \"draft-js\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { UncontrolledPopover, PopoverBody, PopoverHeader } from \"reactstrap\";\r\nimport TagsPreview from \"./common/TagsPreview\";\r\n\r\nclass EditorTags extends Component {\r\n  state = { tagsPopoverOpen: false, newTag: \"\" };\r\n\r\n  togglePopover = () => {\r\n    this.setState({ tagsPopoverOpen: !this.state.tagsPopoverOpen });\r\n  };\r\n\r\n  handleTagsDelete = event => {\r\n    const tag = event.currentTarget.getAttribute(\"data\");\r\n    let note = { ...this.props.selectedNote };\r\n    note.tags = note.tags.filter(t => t !== tag);\r\n    this.props.save(note);\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ newTag: event.target.value.toLowerCase() });\r\n  };\r\n\r\n  pressEnter = event => {\r\n    if (event.keyCode !== 13) return;\r\n\r\n    const newTag = this.state.newTag.toLowerCase().trim();\r\n\r\n    let note = this.props.selectedNote\r\n      ? { ...this.props.selectedNote }\r\n      : {\r\n          _id: Date.now().toString(),\r\n          title: \"\",\r\n          content: convertToRaw(this.props.editorState.getCurrentContent()),\r\n          tags: [],\r\n          collection: {}\r\n        };\r\n    // don't allow duplicate tags\r\n    if (note.tags.includes(newTag)) return;\r\n\r\n    note.tags.push(newTag);\r\n    this.props.save(note);\r\n    this.setState({ newTag: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { selectedNote } = this.props;\r\n\r\n    return (\r\n      <div\r\n        style={{ textAlign: \"right\", padding: \"0px 10px\" }}\r\n        id=\"tags-popover-link\"\r\n      >\r\n        <TagsPreview\r\n          fontSize=\"12px\"\r\n          tags={selectedNote ? selectedNote.tags : {}}\r\n          iconColor=\"black\"\r\n        />\r\n        <UncontrolledPopover\r\n          placement=\"bottom\"\r\n          isOpen={this.state.tagsPopoverOpen}\r\n          target=\"tags-popover-link\"\r\n          trigger=\"legacy\"\r\n          toggle={() => this.togglePopover()}\r\n        >\r\n          <PopoverHeader>edit tags:</PopoverHeader>\r\n          <PopoverBody key={selectedNote ? selectedNote.tags.length : 0}>\r\n            {selectedNote ? (\r\n              selectedNote.tags.map(tag => (\r\n                <div key={tag}>\r\n                  <span data={tag} onClick={e => this.handleTagsDelete(e)}>\r\n                    <FontAwesomeIcon\r\n                      icon={faMinusCircle}\r\n                      style={{ color: \"red\", marginRight: \"10px\" }}\r\n                    />\r\n                  </span>\r\n                  <label className=\"form-check-label\">{tag}</label>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.newTag}\r\n              onChange={e => this.onChange(e)}\r\n              placeholder=\"new tag...\"\r\n              style={{\r\n                fontSize: \".9rem\",\r\n                lineHeight: \"1\",\r\n                padding: \"0px .75rem\",\r\n                marginTop: \"10px\",\r\n                width: \"150px\",\r\n                height: \"calc(2rem + 2px)\"\r\n              }}\r\n              onKeyDown={this.pressEnter}\r\n              autoFocus\r\n            />\r\n            <small>\r\n              <em>press Enter to save</em>\r\n            </small>\r\n          </PopoverBody>\r\n        </UncontrolledPopover>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditorTags;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditorCollections from \"./EditorCollections\";\r\nimport EditorTags from \"./EditorTags\";\r\n\r\nclass EditorMenu extends Component {\r\n  state = {};\r\n\r\n  menuStyle = {\r\n    margin: \"auto\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"inline-flex\",\r\n    justifyContent: \"space-between\"\r\n  };\r\n\r\n  crudStyle = {\r\n    display: \"inline-flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\",\r\n    width: \"200px\",\r\n    height: \"100%\",\r\n    fontSize: \"12px\"\r\n  };\r\n\r\n  metaDataStyle = {\r\n    display: \"inline-flex\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    fontSize: \"12px\"\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      save,\r\n      handleDelete,\r\n      selectedNote,\r\n      collections,\r\n      editorState\r\n    } = this.props;\r\n\r\n    return (\r\n      <div style={this.menuStyle}>\r\n        <div id=\"crud-operations\" style={this.crudStyle}>\r\n          <Link to=\"/notes/new\">\r\n            <div className=\"clickable editor-menu-option\">\r\n              <i className=\"fa fa-plus\" aria-hidden=\"true\" />\r\n              <span> New Note</span>\r\n            </div>\r\n          </Link>\r\n          <div className=\"clickable editor-menu-option\" onClick={handleDelete}>\r\n            <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n            <span> Delete</span>\r\n          </div>\r\n          <div\r\n            className=\"clickable editor-menu-option\"\r\n            onClick={() => save(selectedNote)}\r\n          >\r\n            <i className=\"fa fa-floppy-o\" aria-hidden=\"true\" />\r\n            <span> Save</span>\r\n          </div>\r\n        </div>\r\n        <div id=\"notes-meta-data\" style={this.metaDataStyle}>\r\n          <EditorCollections\r\n            selectedNote={selectedNote}\r\n            collections={collections}\r\n            save={save}\r\n            editorState={editorState}\r\n          />\r\n          <EditorTags\r\n            selectedNote={selectedNote}\r\n            save={save}\r\n            editorState={editorState}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditorMenu;\r\n","import React from \"react\";\r\nimport { Editor, RichUtils, convertToRaw } from \"draft-js\";\r\nimport Textarea from \"react-expanding-textarea\";\r\nimport EditorMenu from \"./EditorMenu\";\r\nimport \"../css/notes.css\";\r\nimport \"draft-js/dist/Draft.css\";\r\n\r\nclass DraftEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.focus = () => this.editor.focus();\r\n\r\n    this.handleKeyCommand = this._handleKeyCommand.bind(this);\r\n    this.toggleBlockType = this._toggleBlockType.bind(this);\r\n    this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\r\n  }\r\n\r\n  handleTitle = title => {\r\n    if (this.props.selectedNote) {\r\n      const note = { ...this.props.selectedNote };\r\n      note.title = title;\r\n      return this.props.updateSelectedNote(note);\r\n    } else {\r\n      const currentEditorContent = convertToRaw(\r\n        this.props.editorState.getCurrentContent()\r\n      );\r\n      const note = {\r\n        _id: Date.now().toString(),\r\n        title: title,\r\n        content: currentEditorContent,\r\n        tags: [],\r\n        collection: {}\r\n      };\r\n      return this.props.updateSelectedNote(note);\r\n    }\r\n  };\r\n\r\n  _handleKeyCommand(command, editorState) {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      this.props.onEditorChange(newState);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _toggleBlockType(blockType) {\r\n    this.props.onEditorChange(\r\n      RichUtils.toggleBlockType(this.props.editorState, blockType)\r\n    );\r\n  }\r\n\r\n  _toggleInlineStyle(inlineStyle) {\r\n    this.props.onEditorChange(\r\n      RichUtils.toggleInlineStyle(this.props.editorState, inlineStyle)\r\n    );\r\n  }\r\n\r\n  controlsStyle = {\r\n    display: \"inline-flex\",\r\n    fontFamily: \"Arial, Helvetica, sans-serif\",\r\n    fontSize: \"14px\",\r\n    margin: \"auto 0px\"\r\n  };\r\n\r\n  verticalLine = {\r\n    width: \"1px\",\r\n    height: \"20px\",\r\n    borderRight: \"1px solid grey\",\r\n    margin: \"auto 5px\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"editor-window\">\r\n        <div className=\"editor-menu\">\r\n          <EditorMenu\r\n            save={this.props.save}\r\n            handleDelete={this.props.handleDelete}\r\n            selectedNote={this.props.selectedNote}\r\n            collections={this.props.collections}\r\n            updateSelectedNote={this.props.updateSelectedNote}\r\n            editorState={this.props.editorState}\r\n          />\r\n          <div id=\"stying-controls\" style={this.controlsStyle}>\r\n            <InlineStyleControls\r\n              editorState={this.props.editorState}\r\n              onToggle={this.toggleInlineStyle}\r\n            />\r\n            <div style={this.verticalLine}></div>\r\n            <BlockStyleControls\r\n              editorState={this.props.editorState}\r\n              onToggle={this.toggleBlockType}\r\n            />\r\n            <hr></hr>\r\n          </div>\r\n        </div>\r\n        <div id=\"rich-text-editor\">\r\n          <div>\r\n            <Textarea\r\n              className=\"textarea\"\r\n              id=\"title-textarea\"\r\n              placeholder=\"Title...\"\r\n              value={\r\n                this.props.selectedNote ? this.props.selectedNote.title : \"\"\r\n              }\r\n              onChange={e => this.handleTitle(e.target.value)}\r\n            />\r\n            <hr></hr>\r\n          </div>\r\n          <div className=\"editor-edit\" onClick={this.focus}>\r\n            <Editor\r\n              blockStyleFn={getBlockStyle}\r\n              customStyleMap={styleMap}\r\n              editorState={this.props.editorState}\r\n              handleKeyCommand={this.handleKeyCommand}\r\n              keyBindingFn={this.mapKeyToEditorCommand}\r\n              onChange={this.props.onEditorChange}\r\n              ref={ref => (this.editor = ref)}\r\n              spellCheck={true}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n  CODE: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n    fontSize: 16,\r\n    padding: 2\r\n  }\r\n};\r\n\r\nfunction getBlockStyle(block) {\r\n  switch (block.getType()) {\r\n    case \"blockquote\":\r\n      return \"RichEditor-blockquote\";\r\n    case \"code-block\":\r\n      return \"editor-code\";\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nclass StyleButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onToggle = e => {\r\n      e.preventDefault();\r\n      props.onToggle(props.style);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let className = \"editor-styleButton\";\r\n    if (this.props.active) {\r\n      className += \" editor-activeButton\";\r\n    }\r\n\r\n    return (\r\n      <span className={className} onMouseDown={this.onToggle}>\r\n        {this.props.label}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst BLOCK_TYPES = [\r\n  { label: \"Title\", style: \"header-one\" },\r\n  { label: \"Header\", style: \"header-three\" },\r\n  {\r\n    label: <i className=\"fa fa-list-ul\" aria-hidden=\"true\"></i>,\r\n    style: \"unordered-list-item\"\r\n  },\r\n  {\r\n    label: <i className=\"fa fa-list-ol\" aria-hidden=\"true\"></i>,\r\n    style: \"ordered-list-item\"\r\n  },\r\n  {\r\n    label: <i className=\"fa fa-code\" aria-hidden=\"true\"></i>,\r\n    style: \"code-block\"\r\n  }\r\n];\r\n\r\nconst BlockStyleControls = ({ editorState, onToggle }) => {\r\n  const selection = editorState.getSelection();\r\n  const blockType = editorState\r\n    .getCurrentContent()\r\n    .getBlockForKey(selection.getStartKey())\r\n    .getType();\r\n\r\n  return (\r\n    <div className=\"editor-control-row\">\r\n      {BLOCK_TYPES.map(type => (\r\n        <StyleButton\r\n          key={type.style}\r\n          active={type.style === blockType}\r\n          label={type.label}\r\n          onToggle={onToggle}\r\n          style={type.style}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nvar INLINE_STYLES = [\r\n  { label: <i className=\"fa fa-bold\" aria-hidden=\"true\"></i>, style: \"BOLD\" },\r\n  {\r\n    label: <i className=\"fa fa-italic\" aria-hidden=\"true\"></i>,\r\n    style: \"ITALIC\"\r\n  },\r\n  {\r\n    label: <i className=\"fa fa-underline\" aria-hidden=\"true\"></i>,\r\n    style: \"UNDERLINE\"\r\n  },\r\n  { label: \"Monospace\", style: \"CODE\" }\r\n];\r\n\r\nconst InlineStyleControls = ({ editorState, onToggle }) => {\r\n  var currentStyle = editorState.getCurrentInlineStyle();\r\n  return (\r\n    <div className=\"editor-control-row\">\r\n      {INLINE_STYLES.map(type => (\r\n        <StyleButton\r\n          key={type.style}\r\n          active={currentStyle.has(type.style)}\r\n          label={type.label}\r\n          onToggle={onToggle}\r\n          style={type.style}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraftEditor;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport TagsPreview from \"./common/TagsPreview\";\r\nimport config from \"../config\";\r\n\r\nclass NotesPreview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  listItemStyle = {\r\n    padding: \"0.5em 0.75em\",\r\n    background: \"white\"\r\n  };\r\n\r\n  previewStyle = {\r\n    fontSize: 12,\r\n    margin: \"3px 0px\",\r\n    lineHeight: 1.25\r\n  };\r\n\r\n  tagsStyle = {\r\n    fontSize: 11,\r\n    fontStyle: \"italic\",\r\n    marginLeft: \"5px\",\r\n    color: \"orangered\"\r\n  };\r\n\r\n  collectionStyle = {\r\n    margin: \"5px 5px 5px 0px\",\r\n    borderRadius: \"0 8px 8px 0\",\r\n    writingMode: \"vertical-rl\",\r\n    textAlign: \"center\",\r\n    fontSize: \"11px\",\r\n    letterSpacing: \"0.5px\",\r\n    fontWeight: \"bold\",\r\n    fontStyle: \"oblique\"\r\n  };\r\n\r\n  individualNotes = {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"20px auto\",\r\n    width: \"100%\",\r\n    padding: \"1px\",\r\n    marginBottom: \"0px\"\r\n  };\r\n\r\n  filterNotes = notes => {\r\n    let search = this.props.searchQuery.toLowerCase();\r\n\r\n    if (notes)\r\n      return notes.filter(\r\n        n =>\r\n          n.content.blocks.find(el => el.text.toLowerCase().includes(search)) ||\r\n          n.title.toLowerCase().includes(search)\r\n      );\r\n  };\r\n\r\n  generateSearchPreview = note => {\r\n    let searchQuery = this.props.searchQuery;\r\n\r\n    let previewText = note.content.blocks.map(n => n.text).join(\" \");\r\n    let startIndex = previewText\r\n      .toLowerCase()\r\n      .indexOf(searchQuery.toLowerCase());\r\n\r\n    if (startIndex === -1) return <div>{previewText}</div>;\r\n    let endIndex = startIndex + searchQuery.length;\r\n\r\n    const preLength = 20;\r\n    const previewLength = config.notesPreviewLength;\r\n\r\n    let pre = previewText.slice(0, startIndex);\r\n    let highlight = previewText.slice(startIndex, endIndex);\r\n    let post = previewText.slice(endIndex);\r\n\r\n    if (previewText.length > previewLength) {\r\n      if (pre.length >= previewLength + searchQuery.length + 3)\r\n        pre = pre.slice(pre.length - preLength);\r\n      if (post.length > previewLength - searchQuery.length - pre.length)\r\n        post = post.slice(0, previewLength - pre.length);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <span>{pre}</span>\r\n        <span style={{ backgroundColor: \"yellow\" }}>{highlight}</span>\r\n        <span>{post}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  generateTitle = note => {\r\n    let searchQuery = this.props.searchQuery;\r\n    let title = note.title;\r\n\r\n    let startIndex = title.toLowerCase().indexOf(searchQuery.toLowerCase());\r\n\r\n    if (startIndex === -1) return <div>{title}</div>;\r\n\r\n    let endIndex = startIndex + searchQuery.length;\r\n\r\n    let pre = title.slice(0, startIndex);\r\n    let highlight = title.slice(startIndex, endIndex);\r\n    let post = title.slice(endIndex);\r\n\r\n    return (\r\n      <div>\r\n        <span>{pre}</span>\r\n        <span style={{ backgroundColor: \"yellow\" }}>{highlight}</span>\r\n        <span>{post}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let filtered = this.filterNotes(this.props.allNotes);\r\n    console.log(\"rerender\", filtered);\r\n\r\n    return (\r\n      <div className=\"list-group preview-section\">\r\n        {filtered &&\r\n          filtered.map((n, index) => {\r\n            return (\r\n              <div\r\n                className=\"list-group-item\"\r\n                style={{\r\n                  ...this.individualNotes,\r\n                  background:\r\n                    this.props.selectedNote &&\r\n                    n._id === this.props.selectedNote._id\r\n                      ? (n.collection && n.collection.color) || \"lightgray\"\r\n                      : \"white\"\r\n                }}\r\n                key={n._id}\r\n              >\r\n                <div\r\n                  style={{\r\n                    ...this.collectionStyle,\r\n                    background: n.collection.color || \"none\"\r\n                  }}\r\n                  key={index}\r\n                >\r\n                  <span>{n.collection.name}</span>\r\n                </div>\r\n                <Link\r\n                  key={n._id}\r\n                  to={`/notes/${n._id}`}\r\n                  style={this.listItemStyle}\r\n                  className=\"list-group-item-action\"\r\n                >\r\n                  <div>\r\n                    <div className=\"d-flex w-100 justify-content-between\">\r\n                      <h5 className=\"mb-1\">{this.generateTitle(n)}</h5>\r\n                      <small>{moment(n.updated).format(\"MMM D 'YY\")}</small>\r\n                    </div>\r\n                    <div style={this.previewStyle}>\r\n                      {this.generateSearchPreview(n)}\r\n                    </div>\r\n                    <TagsPreview\r\n                      fontSize=\"11px\"\r\n                      tags={n.tags}\r\n                      style={{ marginTop: \"5px\" }}\r\n                      iconColor=\"darkslateblue\"\r\n                    />\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotesPreview;\r\n","import React from \"react\";\r\n\r\nconst NotesSearch = ({ searchQuery, onSearch, onClear }) => {\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        value={searchQuery}\r\n        onChange={e => onSearch(e.currentTarget.value)}\r\n        placeholder=\"Search...\"\r\n      />\r\n      <div className=\"input-group-prepend\">\r\n        <span\r\n          onClick={() => onClear()}\r\n          className=\"btn btn-outline-secondary\"\r\n          type=\"button\"\r\n        >\r\n          clear\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesSearch;\r\n","import React, { Component, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlus,\r\n  faCaretRight,\r\n  faCaretDown,\r\n  faUserCircle,\r\n  faBook,\r\n  faTags,\r\n  faEdit,\r\n  faCheckCircle,\r\n  faMinusCircle,\r\n  faFillDrip\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { UncontrolledPopover, PopoverBody } from \"reactstrap\";\r\nimport { Popover, OverlayTrigger } from \"react-bootstrap\";\r\nimport AppContext from \"../context/AppContext\";\r\nimport randomColor from \"./../utils/randomColor\";\r\n\r\nclass NotesFilter extends Component {\r\n  state = {\r\n    editMode: false,\r\n    collectionsToEdit: []\r\n  };\r\n\r\n  toggleEditMode = () => {\r\n    const currentCollections = [...this.props.collections];\r\n    if (!this.state.editMode) {\r\n      this.setState({ editMode: true, collectionsToEdit: currentCollections });\r\n    } else {\r\n      let collectionsToUpdate = this.state.collectionsToEdit.filter(\r\n        (c, index) => {\r\n          return (\r\n            c.name !== currentCollections[index].name ||\r\n            c.color !== currentCollections[index].color\r\n          );\r\n        }\r\n      );\r\n      collectionsToUpdate.forEach(\r\n        async c => await this.props.updateCollections(c, \"edit\")\r\n      );\r\n      this.setState({ editMode: !this.state.editMode });\r\n    }\r\n  };\r\n\r\n  handleCollectionDelete = event => {\r\n    const collectionId = event.currentTarget.getAttribute(\"data\");\r\n    let allCollections = [...this.props.collections];\r\n\r\n    let collection = allCollections.filter(c => c._id === collectionId);\r\n    this.props.updateCollections(collection[0], \"delete\");\r\n  };\r\n\r\n  handleCollectionEdit = (type, collection, index, value) => {\r\n    const collectionsToEdit = [...this.state.collectionsToEdit];\r\n    const collectionToUpdate = { ...collection };\r\n\r\n    if (type === \"name\") collectionToUpdate.name = value;\r\n\r\n    if (type === \"color\") collectionToUpdate.color = value;\r\n\r\n    collectionsToEdit.splice(index, 1, collectionToUpdate);\r\n\r\n    this.setState({ collectionsToEdit });\r\n  };\r\n\r\n  handleColorChange = (color, event) => {\r\n    this.setState({ colorChange: color.hex });\r\n  };\r\n\r\n  filterStyle = {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"40px 60px 200px 300px\",\r\n    overflow: \"auto\",\r\n    padding: \"15px 5px\",\r\n    height: \"100%\",\r\n    width: \"100%\"\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handleRadioSelect,\r\n      handleCheckboxSelect,\r\n      collectionFilter,\r\n      tagsFilter,\r\n      collections,\r\n      tags\r\n    } = this.props;\r\n\r\n    return (\r\n      <div id=\"filterSection\" style={this.filterStyle} className=\"bg-dark-blue\">\r\n        <Profile />\r\n        <Buttons\r\n          updateCollections={this.props.updateCollections}\r\n          editMode={this.state.editMode}\r\n          toggleEditMode={this.toggleEditMode}\r\n        />\r\n        <CollectionFilter\r\n          toggleEditMode={this.toggleEditMode}\r\n          editMode={this.state.editMode}\r\n          handleRadioSelect={handleRadioSelect}\r\n          handleCollectionEdit={this.handleCollectionEdit}\r\n          handleCollectionDelete={this.handleCollectionDelete}\r\n          collections={collections}\r\n          collectionFilter={collectionFilter}\r\n          collectionsToEdit={this.state.collectionsToEdit}\r\n        />\r\n        <TagFilter\r\n          tags={tags}\r\n          tagsFilter={tagsFilter}\r\n          handleCheckboxSelect={handleCheckboxSelect}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Profile = () => {\r\n  let profileDivStyle = {\r\n    background: \"black\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    color: \"white\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: \"10px\"\r\n  };\r\n\r\n  let profileContentStyle = {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"20% auto\",\r\n    width: \"100%\",\r\n    cursor: \"pointer\"\r\n  };\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {value => (\r\n        <div id=\"profile-preview\" style={profileDivStyle}>\r\n          <div style={profileContentStyle}>\r\n            <div style={{ display: \"flex\", margin: \"auto\" }}>\r\n              <FontAwesomeIcon icon={faUserCircle} />\r\n            </div>\r\n            <div style={{ fontSize: \"11px\" }}>\r\n              {(value.user && value.user.email) || \"DEMO MODE (no user)\"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nconst Buttons = ({ updateCollections, toggleEditMode, editMode }) => {\r\n  let [popoverOpen, togglePopover] = useState(false);\r\n  let [newCollection, setNewCollection] = useState(\"\");\r\n\r\n  let pressEnter = event => {\r\n    if (event.keyCode !== 13) return;\r\n\r\n    if (newCollection === \"\") return;\r\n\r\n    const collection = {\r\n      _id: Date.now().toString(),\r\n      name: newCollection.trim(),\r\n      color: randomColor()\r\n    };\r\n    setNewCollection(\"\");\r\n    updateCollections(collection, \"add\");\r\n  };\r\n\r\n  let style = {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    color: \"white\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n    padding: \"0 10px\",\r\n    justifyContent: \"space-around\"\r\n  };\r\n\r\n  let buttonStyle = {\r\n    height: \"25px\",\r\n    fontSize: \"11px\",\r\n    padding: \"2px 5px\"\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={style}>\r\n        <button\r\n          className=\"btn btn-secondary btn-sm\"\r\n          style={buttonStyle}\r\n          id=\"add-collection\"\r\n        >\r\n          <FontAwesomeIcon icon={faPlus} />\r\n          <span> Collection</span>\r\n        </button>\r\n        {editMode ? (\r\n          <button\r\n            className=\"btn btn-primary btn-sm\"\r\n            style={buttonStyle}\r\n            onClick={() => toggleEditMode()}\r\n          >\r\n            <FontAwesomeIcon icon={faCheckCircle} />\r\n            <span> Done</span>\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"btn btn-danger btn-sm\"\r\n            style={buttonStyle}\r\n            onClick={() => toggleEditMode()}\r\n          >\r\n            <FontAwesomeIcon icon={faEdit} />\r\n            <span> Edit</span>\r\n          </button>\r\n        )}\r\n      </div>\r\n      <UncontrolledPopover\r\n        placement=\"bottom\"\r\n        isOpen={popoverOpen}\r\n        target=\"add-collection\"\r\n        trigger=\"legacy\"\r\n        toggle={() => togglePopover(!popoverOpen)}\r\n      >\r\n        <PopoverBody>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={newCollection}\r\n            onChange={e => setNewCollection(e.target.value.toLowerCase())}\r\n            placeholder=\"new collection...\"\r\n            style={{\r\n              fontSize: \".9rem\",\r\n              marginTop: \"10px\",\r\n              lineHeight: \"1\",\r\n              padding: \"0px .75rem\",\r\n              width: \"150px\",\r\n              height: \"calc(2rem + 2px)\"\r\n            }}\r\n            onKeyDown={pressEnter}\r\n            autoFocus\r\n          />\r\n          <small>\r\n            <em>press Enter to save</em>\r\n          </small>{\" \"}\r\n        </PopoverBody>\r\n      </UncontrolledPopover>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet collectionTagStyle = {\r\n  marginTop: \"10px\",\r\n  color: \"white\"\r\n};\r\n\r\nlet dropdownTitle = {\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"15px auto\",\r\n  width: \"100%\",\r\n  alignItems: \"baseline\"\r\n};\r\n\r\nconst CollectionFilter = ({\r\n  editMode,\r\n  handleRadioSelect,\r\n  handleCollectionEdit,\r\n  handleCollectionDelete,\r\n  collections,\r\n  collectionFilter,\r\n  collectionsToEdit\r\n}) => {\r\n  let [dropdownOpen, setDropdownOpen] = useState(true);\r\n\r\n  return (\r\n    <div id=\"collection-filter\" style={collectionTagStyle}>\r\n      <div className=\"list-group clickable\">\r\n        <div\r\n          style={dropdownTitle}\r\n          onClick={() => setDropdownOpen(!dropdownOpen)}\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#collections\"\r\n          aria-expanded={dropdownOpen}\r\n          aria-controls=\"collections\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={dropdownOpen ? faCaretDown : faCaretRight}\r\n            className=\"faCaretDropdown\"\r\n          />\r\n          <div>\r\n            <span>Collections </span>\r\n            <span style={{ paddingLeft: \"10px\" }}>\r\n              {\" \"}\r\n              <FontAwesomeIcon\r\n                icon={faBook}\r\n                style={{ fontSize: \"14px\", transform: \"rotate(-20deg)\" }}\r\n              />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"collapse multi-collapse show\"\r\n        id=\"collections\"\r\n        style={{\r\n          marginLeft: \"10px\",\r\n          fontSize: \"14px\",\r\n          height: \"95%\",\r\n          overflow: \"auto\"\r\n        }}\r\n      >\r\n        {editMode ? (\r\n          <div></div>\r\n        ) : (\r\n          <div key=\"allCollections\" className=\"form-check clickable\">\r\n            <label className=\"form-check-label\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"collection-choices\"\r\n                value=\"\"\r\n                checked={collectionFilter === \"\"}\r\n                onChange={e => handleRadioSelect(e)}\r\n              />\r\n              All\r\n            </label>\r\n          </div>\r\n        )}\r\n        {editMode ? (\r\n          <EditCollections\r\n            collectionsToEdit={collectionsToEdit}\r\n            handleCollectionEdit={handleCollectionEdit}\r\n            handleCollectionDelete={handleCollectionDelete}\r\n          />\r\n        ) : (\r\n          collections.map(c => (\r\n            <div className=\"form-check\" key={c._id}>\r\n              <label className=\"form-check-label\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"collection-choices\"\r\n                  value={c.name}\r\n                  checked={collectionFilter === c.name}\r\n                  onChange={e => handleRadioSelect(e)}\r\n                />\r\n                {c.name}\r\n              </label>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TagFilter = ({ tags, tagsFilter, handleCheckboxSelect }) => {\r\n  let [dropdownOpen, setDropdownOpen] = useState(true);\r\n\r\n  return (\r\n    <div id=\"tags-filter\" style={collectionTagStyle}>\r\n      <div className=\"list-group clickable\">\r\n        <div\r\n          style={dropdownTitle}\r\n          onClick={() => setDropdownOpen(!dropdownOpen)}\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#tags\"\r\n          aria-expanded={dropdownOpen}\r\n          aria-controls=\"tags\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={dropdownOpen ? faCaretDown : faCaretRight}\r\n            className=\"faCaretDropdown\"\r\n          />\r\n          <div>\r\n            <span>Tags </span>\r\n            <span style={{ paddingLeft: \"10px\" }}>\r\n              {\" \"}\r\n              <FontAwesomeIcon icon={faTags} style={{ fontSize: \"12px\" }} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"collapse multi-collapse show\"\r\n        id=\"tags\"\r\n        style={{\r\n          marginLeft: \"10px\",\r\n          fontSize: \"14px\",\r\n          height: \"90%\",\r\n          overflow: \"auto\"\r\n        }}\r\n      >\r\n        {tags.map(tag => (\r\n          <div className=\"form-check\" key={tag}>\r\n            <label className=\"form-check-label\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                name=\"tag-choices\"\r\n                id={tag}\r\n                value={tag}\r\n                checked={tagsFilter !== [] && tagsFilter.includes(tag)}\r\n                onChange={e => handleCheckboxSelect(e)}\r\n              />\r\n              {tag}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditCollections = ({\r\n  collectionsToEdit,\r\n  handleCollectionEdit,\r\n  handleCollectionDelete\r\n}) => {\r\n  return (\r\n    <div>\r\n      {collectionsToEdit.map((c, i) => (\r\n        <div key={c._id} className=\"edit-group\">\r\n          <div\r\n            className=\"edit-group-prepend\"\r\n            data={c._id}\r\n            onClick={e => handleCollectionDelete(e)}\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={faMinusCircle}\r\n              style={{\r\n                color: \"red\",\r\n                fontSize: \"14px\",\r\n                margin: \"auto 10px auto 0px\"\r\n              }}\r\n              className=\"clickable\"\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"edit-form-control\"\r\n            aria-label=\"Small\"\r\n            value={c.name}\r\n            onChange={e => handleCollectionEdit(\"name\", c, i, e.target.value)}\r\n          />\r\n          <EditColor\r\n            color={c.color}\r\n            collection={c}\r\n            handleCollectionEdit={handleCollectionEdit}\r\n            index={i}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditColor = ({ color, collection, handleCollectionEdit, index }) => {\r\n  const [colors, setColors] = useState([\r\n    \"#BCAAA4\",\r\n    \"#EF9A9A\",\r\n    \"#C5E1A5\",\r\n    \"#FFCC80\",\r\n    \"#CE93D8\",\r\n    \"#4FC3F7\"\r\n  ]);\r\n  const [newColor, setNewColor] = useState(\"\");\r\n\r\n  const componentStyle = {\r\n    width: \"180px\",\r\n    height: \"70px\",\r\n    display: \"grid\",\r\n    gridTemplateRows: \"30px 40px\",\r\n    gridTemplateColumns: \"auto\"\r\n  };\r\n\r\n  const divStyle = {\r\n    width: \"180px\",\r\n    height: \"30px\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(6, 30px)\"\r\n  };\r\n\r\n  const swatchStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    padding: \"2px\"\r\n  };\r\n\r\n  return (\r\n    <OverlayTrigger\r\n      trigger=\"click\"\r\n      placement=\"top\"\r\n      rootClose\r\n      overlay={\r\n        <div>\r\n          <Popover id={collection._id} style={{ border: `3px solid ${color}` }}>\r\n            <Popover.Title>\r\n              selected: <em>{color}</em>\r\n            </Popover.Title>\r\n            <Popover.Content>\r\n              <div style={componentStyle}>\r\n                <div style={divStyle}>\r\n                  {colors.map(c => (\r\n                    <div style={swatchStyle} key={c}>\r\n                      <div\r\n                        style={{ backgroundColor: c }}\r\n                        className=\"w100 h100 hover-grow-10 clickable\"\r\n                        onClick={() =>\r\n                          handleCollectionEdit(\"color\", collection, index, c)\r\n                        }\r\n                      ></div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    display: \"grid\",\r\n                    gridTemplateColumns: \"40% 60% auto\"\r\n                  }}\r\n                >\r\n                  <button\r\n                    className=\"btn btn-small btn-info\"\r\n                    style={{\r\n                      padding: \"2px 5px\",\r\n                      fontSize: \"12px\",\r\n                      margin: \"auto\"\r\n                    }}\r\n                    onClick={() => setColors(colors.map(() => randomColor()))}\r\n                  >\r\n                    random!\r\n                  </button>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"hex key...\"\r\n                    value={newColor}\r\n                    onChange={e => setNewColor(e.target.value)}\r\n                    type=\"text\"\r\n                    maxLength=\"6\"\r\n                    style={{\r\n                      margin: \"auto\",\r\n                      padding: \"2px 25px 2px 5px\",\r\n                      height: \"auto\",\r\n                      fontSize: \"12px\"\r\n                    }}\r\n                  />\r\n                  <FontAwesomeIcon\r\n                    icon={faCheckCircle}\r\n                    style={{\r\n                      margin: \"auto\",\r\n                      position: \"relative\",\r\n                      left: \"-20px\",\r\n                      color: \"blue\",\r\n                      fontSize: \"16px\"\r\n                    }}\r\n                    className=\"clickable hover-grow-10\"\r\n                    onClick={() =>\r\n                      handleCollectionEdit(\r\n                        \"color\",\r\n                        collection,\r\n                        index,\r\n                        \"#\" + newColor\r\n                      )\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </div>\r\n      }\r\n    >\r\n      <div className=\"edit-group-prepend\">\r\n        <FontAwesomeIcon\r\n          icon={faFillDrip}\r\n          style={{\r\n            color: collection.color,\r\n            margin: \"auto 0px auto 10px\",\r\n            fontSize: \"14px\"\r\n          }}\r\n          className=\"clickable\"\r\n        />\r\n      </div>\r\n    </OverlayTrigger>\r\n  );\r\n};\r\n\r\nexport default NotesFilter;\r\n","import React, { Component } from \"react\";\r\nimport NotesPreview from \"./NotesPreview\";\r\nimport NotesSearch from \"./NotesSearch\";\r\nimport NotesFilter from \"./NotesFilter\";\r\n\r\nclass SideBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tagsOpen: true,\r\n      collectionFilter: \"\",\r\n      tagsFilter: []\r\n    };\r\n\r\n    this.handleCheckboxSelect = this.handleCheckboxSelect.bind(this);\r\n    this.handleRadioSelect = this.handleRadioSelect.bind(this);\r\n    this.handleDropdownClick = this.handleDropdownClick.bind(this);\r\n  }\r\n\r\n  sidebarStyle = {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"200px auto\",\r\n    margin: 0,\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  };\r\n\r\n  handleDropdownClick(e) {\r\n    const dataTarget = e.currentTarget.getAttribute(\"data-target\");\r\n    const isExpanded = e.currentTarget.getAttribute(\"aria-expanded\");\r\n\r\n    switch (dataTarget) {\r\n      case \"#collections\":\r\n        if (isExpanded === \"false\") {\r\n          this.setState({ collectionsOpen: false });\r\n        } else {\r\n          this.setState({ collectionsOpen: true });\r\n        }\r\n        break;\r\n      case \"#tags\":\r\n        if (isExpanded === \"false\") {\r\n          this.setState({ tagsOpen: false });\r\n        } else {\r\n          this.setState({ tagsOpen: true });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  handleRadioSelect(event) {\r\n    this.setState({\r\n      collectionFilter: event.target.value,\r\n      tagsFilter: []\r\n    });\r\n  }\r\n\r\n  handleCheckboxSelect(event) {\r\n    let selectedTags = this.state.tagsFilter;\r\n    let tag = event.target.value;\r\n\r\n    if (selectedTags.includes(tag)) {\r\n      let newTags = selectedTags;\r\n      newTags.splice(selectedTags.indexOf(tag), 1);\r\n      this.setState({\r\n        tagsFilter: newTags\r\n      });\r\n    } else {\r\n      this.setState({\r\n        tagsFilter: [...this.state.tagsFilter, tag]\r\n      });\r\n    }\r\n  }\r\n\r\n  filterNotes(notes) {\r\n    let filteredNotes = notes;\r\n\r\n    if (this.state.collectionFilter)\r\n      filteredNotes = filteredNotes.filter(\r\n        n => n.collection.name === this.state.collectionFilter\r\n      );\r\n\r\n    let tags = [];\r\n    filteredNotes.forEach(n => tags.push(...n.tags));\r\n    tags = [...new Set(tags)];\r\n\r\n    if (this.state.tagsFilter.length > 0) {\r\n      let lowerTags = this.state.tagsFilter.map(t => t.toLowerCase());\r\n\r\n      filteredNotes = filteredNotes.filter(n => {\r\n        let combinedTags = [...n.tags.map(n => n.toLowerCase()), ...lowerTags];\r\n        let setTags = [...new Set(combinedTags)];\r\n        return setTags.length !== combinedTags.length;\r\n      });\r\n    }\r\n\r\n    return { filteredNotes, tags };\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      searchQuery,\r\n      allNotes,\r\n      selectedNote,\r\n      onSearch,\r\n      onClear,\r\n      collections,\r\n      updateCollections\r\n    } = this.props;\r\n\r\n    let tags = [];\r\n\r\n    if (allNotes) {\r\n      let notes = this.filterNotes(allNotes);\r\n      allNotes = notes.filteredNotes;\r\n      tags = notes.tags.sort();\r\n    }\r\n\r\n    return (\r\n      <div style={this.sidebarStyle}>\r\n        <NotesFilter\r\n          handleDropdownClick={this.handleDropdownClick}\r\n          handleRadioSelect={this.handleRadioSelect}\r\n          handleCheckboxSelect={this.handleCheckboxSelect}\r\n          collectionFilter={this.state.collectionFilter}\r\n          tagsFilter={this.state.tagsFilter}\r\n          collections={collections}\r\n          tags={tags}\r\n          key={collections.length}\r\n          updateCollections={updateCollections}\r\n          allNotes={allNotes}\r\n        />\r\n        <div className=\"sidebar-preview bg-light-gray\">\r\n          <NotesSearch\r\n            onSearch={onSearch}\r\n            searchQuery={searchQuery}\r\n            onClear={onClear}\r\n          />\r\n          <NotesPreview\r\n            allNotes={allNotes}\r\n            selectedNote={selectedNote}\r\n            searchQuery={searchQuery}\r\n            collections={collections}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import config from \"../config\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nasync function getNotes() {\r\n  try {\r\n    const response = await fetch(`${config.apiUrl}notes`, {\r\n      method: \"GET\",\r\n      credentials: \"include\"\r\n    });\r\n    const notes = await response.json();\r\n    if (response.status !== 200) {\r\n      toast.info(\"User not logged in. Demo mode activated!\");\r\n      return null;\r\n    }\r\n    notes.forEach(n => {\r\n      n.collection = n.col;\r\n      delete n.col;\r\n    });\r\n    return notes;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nasync function postNote(note) {\r\n  try {\r\n    const response = await fetch(config.apiUrl + \"notes\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        title: note.title,\r\n        content: note.content,\r\n        tags: note.tags,\r\n        collection: note.collection,\r\n        user: note.user\r\n      })\r\n    });\r\n    const updatedNote = await response.json();\r\n    if (response.status !== 200) {\r\n      return null;\r\n    }\r\n\r\n    updatedNote.collection = updatedNote.col;\r\n    delete updatedNote.col;\r\n\r\n    return updatedNote;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nasync function putNote(note) {\r\n  try {\r\n    const response = await fetch(config.apiUrl + \"notes/\" + note._id, {\r\n      method: \"PUT\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        title: note.title,\r\n        content: note.content,\r\n        tags: note.tags,\r\n        collection: note.collection,\r\n        user: note.user\r\n      })\r\n    });\r\n    const updatedNote = await response.json();\r\n    if (response.status !== 200) {\r\n      return null;\r\n    }\r\n\r\n    updatedNote.collection = updatedNote.col;\r\n    delete updatedNote.col;\r\n\r\n    return updatedNote;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nasync function deleteNote(id) {\r\n  const response = await fetch(config.apiUrl + \"notes/\" + id, {\r\n    method: \"DELETE\",\r\n    credentials: \"include\"\r\n  });\r\n\r\n  if (!response.ok) {\r\n    return null;\r\n  }\r\n\r\n  return id;\r\n}\r\n\r\nexport { getNotes, putNote, postNote, deleteNote };\r\n","import { apiUrl } from \"../config\";\r\n\r\nexport async function getCollections() {\r\n  try {\r\n    const response = await fetch(apiUrl + \"collections\", {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    const collections = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      return null;\r\n    }\r\n\r\n    return collections;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function postCollection(collection) {\r\n  try {\r\n    const response = await fetch(apiUrl + \"collections\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      mode: \"cors\",\r\n      body: JSON.stringify({\r\n        name: collection.name,\r\n        color: collection.color,\r\n        user: collection.user\r\n      })\r\n    });\r\n\r\n    const updatedCollection = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      return null;\r\n    }\r\n    return updatedCollection;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function putCollection(collection) {\r\n  try {\r\n    const response = await fetch(apiUrl + \"collections/\" + collection._id, {\r\n      method: \"PUT\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        name: collection.name,\r\n        color: collection.color,\r\n        user: collection.user\r\n      })\r\n    });\r\n\r\n    const updatedCollection = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      return null;\r\n    }\r\n    return updatedCollection;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function deleteCollection(id) {\r\n  try {\r\n    const response = await fetch(apiUrl + \"collections/\" + id, {\r\n      method: \"DELETE\",\r\n      credentials: \"include\"\r\n    });\r\n\r\n    if (!response.ok) {\r\n      return null;\r\n    }\r\n\r\n    return id;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n","export const DEMONOTES = [\r\n  {\r\n    _id: \"fg0gr34hgioa98g4\",\r\n    title: \"Portland Trail Blazers\",\r\n    content: {\r\n      blocks: [\r\n        {\r\n          key: \"rhc1\",\r\n          text: \"Just some notes....\",\r\n          type: \"unstyled\",\r\n          depth: 0,\r\n          inlineStyleRanges: [],\r\n          entityRanges: [],\r\n          data: {}\r\n        },\r\n        {\r\n          key: \"81bq5\",\r\n          text: \"\",\r\n          type: \"unstyled\",\r\n          depth: 0,\r\n          inlineStyleRanges: [],\r\n          entityRanges: [],\r\n          data: {}\r\n        },\r\n        {\r\n          key: \"20eqn\",\r\n          text: \"Lineup\",\r\n          type: \"header-three\",\r\n          depth: 0,\r\n          inlineStyleRanges: [\r\n            {\r\n              offset: 0,\r\n              length: 6,\r\n              style: \"UNDERLINE\"\r\n            }\r\n          ],\r\n          entityRanges: [],\r\n          data: {}\r\n        },\r\n        {\r\n          key: \"46tkh\",\r\n          text: \"Damian Lillard\",\r\n          type: \"unordered-list-item\",\r\n          depth: 0,\r\n          inlineStyleRanges: [],\r\n          entityRanges: [],\r\n          data: {}\r\n        },\r\n        {\r\n          key: \"aboo4\",\r\n          text: \"CJ McCollum\",\r\n          type: \"unordered-list-item\",\r\n          depth: 0,\r\n          inlineStyleRanges: [],\r\n          entityRanges: [],\r\n          data: {}\r\n        },\r\n        {\r\n          key: \"fupsb\",\r\n          text: \"Jusif Nurkic\",\r\n          type: \"unordered-list-item\",\r\n          depth: 0,\r\n          inlineStyleRanges: [],\r\n          entityRanges: [],\r\n          data: {}\r\n        },\r\n        {\r\n          key: \"c3u3r\",\r\n          text: \"Kent Bazemore\",\r\n          type: \"unordered-list-item\",\r\n          depth: 0,\r\n          inlineStyleRanges: [],\r\n          entityRanges: [],\r\n          data: {}\r\n        },\r\n        {\r\n          key: \"5cr5i\",\r\n          text: \"Rodney Hood\",\r\n          type: \"unordered-list-item\",\r\n          depth: 0,\r\n          inlineStyleRanges: [],\r\n          entityRanges: [],\r\n          data: {}\r\n        }\r\n      ],\r\n      entityMap: {}\r\n    },\r\n    tags: [\"Portland\", \"Sports\", \"Basketball\"],\r\n    collection: {\r\n      _id: \"rht5wsbsgnw\",\r\n      name: \"Sports\",\r\n      color: \"greenyellow\"\r\n    },\r\n    updated: \"2019-07-11T04:05:42.426Z\"\r\n  },\r\n  {\r\n    _id: \"yh533g54yh5335y4gs4\",\r\n    title: \"Sapiens\",\r\n    content: {\r\n      blocks: [\r\n        {\r\n          key: \"6ef7d\",\r\n          text: \"Insert some book notes here. Nothing much...\",\r\n          type: \"unstyled\",\r\n          depth: 0,\r\n          inlineStyleRanges: [],\r\n          entityRanges: [],\r\n          data: {}\r\n        }\r\n      ],\r\n      entityMap: {}\r\n    },\r\n    tags: [\"Books\", \"History\"],\r\n    collection: {\r\n      _id: \"adsfasdfadsf\",\r\n      name: \"Books\",\r\n      color: \"cyan\"\r\n    },\r\n    updated: \"2019-03-11T04:05:42.426Z\",\r\n    user: \"lords.austin@gmail.com\"\r\n  },\r\n  {\r\n    _id: \"thtrjsbehrytu5667s5335y\",\r\n    title: \"Sandy Ridge Trails\",\r\n    content: {\r\n      blocks: [\r\n        {\r\n          key: \"rhc1\",\r\n          text: \"Some of the best mountain biking in Oregon\",\r\n          type: \"unstyled\",\r\n          depth: 0,\r\n          inlineStyleRanges: [],\r\n          entityRanges: [],\r\n          data: {}\r\n        }\r\n      ],\r\n      entityMap: {}\r\n    },\r\n    tags: [\"Portland\", \"Mountain Biking\"],\r\n    collection: {\r\n      _id: \"nvcxcbvtsasdg\",\r\n      name: \"Other\",\r\n      color: \"lightgray\"\r\n    },\r\n    updated: \"2019-08-11T04:05:42.426Z\"\r\n  }\r\n];\r\n\r\nexport function getNote(id) {\r\n  return DEMONOTES.find(n => n._id === id);\r\n}\r\n","export const DEMOCOLLECTIONS = [\r\n  {\r\n    _id: \"adsfasdfadsf\",\r\n    name: \"Books\",\r\n    color: \"cyan\"\r\n  },\r\n  {\r\n    _id: \"rht5wsbsgnw\",\r\n    name: \"Sports\",\r\n    color: \"greenyellow\"\r\n  },\r\n  {\r\n    _id: \"nvcxcbvtsasdg\",\r\n    name: \"Other\",\r\n    color: \"lightgray\"\r\n  }\r\n];\r\n\r\nexport function getCollection(id) {\r\n  return DEMOCOLLECTIONS.find(c => c._id === id);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport DraftEditor from \"./DraftEditor\";\r\nimport { EditorState, convertToRaw, convertFromRaw } from \"draft-js\";\r\nimport SideBar from \"./SideBar\";\r\nimport {\r\n  getNotes,\r\n  putNote,\r\n  postNote,\r\n  deleteNote\r\n} from \"../services/notesService\";\r\nimport {\r\n  getCollections,\r\n  putCollection,\r\n  postCollection,\r\n  deleteCollection\r\n} from \"../services/collectionsService\";\r\nimport { DEMONOTES } from \"../services/demoNotesService\";\r\nimport { DEMOCOLLECTIONS } from \"../services/demoCollectionsService\";\r\nimport \"../css/notes.css\";\r\n\r\nclass Notes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allNotes: null,\r\n      errors: {},\r\n      editorState: EditorState.createEmpty(),\r\n      selectedNote: null,\r\n      searchQuery: \"\",\r\n      collections: []\r\n    };\r\n\r\n    this.onEditorChange = editorState => {\r\n      this.setState({ editorState });\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const id = this.props.match.params.id || null;\r\n\r\n    var NOTES;\r\n    var COLLECTIONS;\r\n\r\n    if (this.props.user) {\r\n      try {\r\n        NOTES = await getNotes();\r\n        COLLECTIONS = await getCollections();\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      NOTES = DEMONOTES;\r\n      COLLECTIONS = DEMOCOLLECTIONS;\r\n    }\r\n\r\n    if (!id || !NOTES)\r\n      return this.setState({ allNotes: NOTES, collections: COLLECTIONS });\r\n\r\n    const note = NOTES.find(n => n._id === id) || null;\r\n    if (note && !note.content.entityMap) {\r\n      note.content.entityMap = Object.create({});\r\n    }\r\n    const editorState = note\r\n      ? EditorState.createWithContent(convertFromRaw(note.content))\r\n      : EditorState.createEmpty();\r\n\r\n    this.setState({\r\n      allNotes: NOTES,\r\n      collections: COLLECTIONS,\r\n      selectedNote: note,\r\n      editorState\r\n    });\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    var { allNotes } = this.state;\r\n\r\n    // if User logged out, update state to DEMO\r\n    if (prevProps.user && this.props.user == null) {\r\n      this.setState({\r\n        allNotes: DEMONOTES,\r\n        collections: DEMOCOLLECTIONS,\r\n        selectedNote: null,\r\n        editorState: EditorState.createEmpty()\r\n      });\r\n      return this.props.history.replace(\"/notes\");\r\n    }\r\n\r\n    const id = this.props.match.params.id;\r\n\r\n    if (!id || !this.state.allNotes) return;\r\n\r\n    if (id === \"new\") {\r\n      this.setState({\r\n        editorState: EditorState.createEmpty(),\r\n        selectedNote: null\r\n      });\r\n      return this.props.history.replace(\"/notes\");\r\n    }\r\n\r\n    const note = await allNotes.find(n => n._id === id);\r\n\r\n    if (note && !note.content.entityMap) {\r\n      note.content.entityMap = Object.create({});\r\n    }\r\n    if (!note) return this.props.history.replace(\"/notes\");\r\n    const editorState = EditorState.createWithContent(\r\n      convertFromRaw(note.content)\r\n    );\r\n\r\n    if (this.state.selectedNote && id !== this.state.selectedNote._id)\r\n      return this.setState({ selectedNote: note, editorState });\r\n\r\n    if (!this.state.selectedNote)\r\n      return this.setState({ selectedNote: note, editorState });\r\n  }\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query });\r\n  };\r\n\r\n  handleClear = () => {\r\n    this.setState({ searchQuery: \"\" });\r\n  };\r\n\r\n  updateSelectedNote = note => {\r\n    this.setState({ selectedNote: note });\r\n  };\r\n\r\n  updateCollections = async (newCollection, action) => {\r\n    let collections = [...this.state.collections];\r\n    let allNotes = [...this.state.allNotes];\r\n    let indexToUpdate = collections.findIndex(c => c._id === newCollection._id);\r\n\r\n    let notesToChange = allNotes\r\n      .filter(n => n.collection._id === newCollection._id)\r\n      .map(n => ({\r\n        _id: n._id,\r\n        title: n.title,\r\n        content: n.content,\r\n        tags: n.tags,\r\n        collection: action === \"edit\" ? newCollection : {},\r\n        updated: n.updated\r\n      }));\r\n\r\n    if (this.props.user) {\r\n      newCollection.user = this.props.user.email;\r\n\r\n      // all sync stuff\r\n      try {\r\n        // DELETE COLLECTION\r\n        if (action === \"delete\") {\r\n          const deletedId = await deleteCollection(newCollection._id);\r\n          if (!deletedId)\r\n            throw new Error(\"Error deleting collection. Try again\");\r\n        }\r\n        // PUT COLLECTION\r\n        if (action === \"edit\") {\r\n          newCollection = await putCollection(newCollection);\r\n          if (!newCollection)\r\n            throw new Error(\"Error updated collection. Try again\");\r\n        }\r\n\r\n        // PUT NOTES\r\n        notesToChange.forEach(async newNote => {\r\n          const updatedNote = await putNote(newNote);\r\n          console.log(\"savedNote: \", updatedNote);\r\n          if (!updatedNote)\r\n            throw new Error(\"Error updating note: \" + newNote.title);\r\n\r\n          allNotes.splice(\r\n            allNotes.findIndex(oldNote => updatedNote._id === oldNote._id),\r\n            1,\r\n            updatedNote\r\n          );\r\n        });\r\n\r\n        // POST COLLECTION\r\n        if (!collections.includes(newCollection) && action === \"add\") {\r\n          newCollection = await postCollection(newCollection);\r\n          if (!newCollection)\r\n            throw new Error(\"Error creating new collection. Try again\");\r\n        }\r\n      } catch (error) {\r\n        return toast.error(error.message);\r\n      }\r\n    }\r\n\r\n    // if DEMO MODE: no async\r\n\r\n    if (action === \"delete\") collections.splice(indexToUpdate, 1);\r\n\r\n    if (action === \"edit\") collections.splice(indexToUpdate, 1, newCollection);\r\n\r\n    if (!this.props.user)\r\n      notesToChange.forEach(newNote => {\r\n        allNotes.splice(\r\n          allNotes.findIndex(oldNote => newNote._id === oldNote._id),\r\n          1,\r\n          newNote\r\n        );\r\n      });\r\n\r\n    if (!collections.includes(newCollection) && action === \"add\")\r\n      collections.push(newCollection);\r\n\r\n    const selectedNote = allNotes.find(\r\n      note => note._id === this.props.match.params.id\r\n    );\r\n    return this.setState({ collections, allNotes, selectedNote });\r\n  };\r\n\r\n  save = async selectedNote => {\r\n    const { allNotes, editorState } = this.state;\r\n    const currentEditorContent = convertToRaw(editorState.getCurrentContent());\r\n    if (!selectedNote) selectedNote = Object.create({});\r\n\r\n    const newNote = {\r\n      _id: selectedNote._id || Date.now().toString(),\r\n      title: selectedNote.title || \"\",\r\n      content: currentEditorContent,\r\n      tags: selectedNote.tags || [],\r\n      collection: selectedNote.collection || {}\r\n    };\r\n\r\n    const existingIndex = allNotes.findIndex(n => n._id === selectedNote._id);\r\n    let collections = [...this.state.collections];\r\n\r\n    const isNewCollection =\r\n      newNote.collection._id &&\r\n      !collections.filter(c => c.name === newNote.collection.name).length;\r\n\r\n    var newCollection;\r\n    var savedNote;\r\n\r\n    // all async here\r\n    if (this.props.user) {\r\n      try {\r\n        // POST Collection\r\n        if (isNewCollection) {\r\n          newNote.collection.user = this.props.user.email;\r\n          newCollection = await postCollection(newNote.collection);\r\n          if (!newCollection)\r\n            throw new Error(\"New collection not saved. Try again.\");\r\n        }\r\n        // PUT Note\r\n        if (existingIndex !== -1) {\r\n          savedNote = await putNote(newNote);\r\n          if (!savedNote) throw new Error(\"Error updating note\");\r\n        } else {\r\n          // POST Note\r\n          savedNote = await postNote(newNote);\r\n          if (!savedNote) throw new Error(\"Error saving new note\");\r\n        }\r\n      } catch (error) {\r\n        return toast.error(error.message);\r\n      }\r\n    }\r\n\r\n    // if DEMO mode\r\n    if (isNewCollection) collections.push(newCollection || newNote.collection);\r\n    if (existingIndex !== -1)\r\n      allNotes.splice(existingIndex, 1, savedNote || newNote);\r\n    if (existingIndex === -1) allNotes.push(savedNote || newNote);\r\n\r\n    const redirectId = savedNote ? savedNote._id : newNote._id;\r\n\r\n    this.setState({\r\n      allNotes,\r\n      selectedNote: savedNote || newNote,\r\n      collections\r\n    });\r\n\r\n    this.props.history.replace(`/notes/${redirectId}`);\r\n  };\r\n\r\n  handleDelete = async () => {\r\n    let id = this.props.match.params.id;\r\n\r\n    try {\r\n      const deleteSuccess = await deleteNote(id);\r\n\r\n      if (!deleteSuccess) throw new Error(\"Could not delete note. Try again.\");\r\n\r\n      this.setState({\r\n        allNotes: this.state.allNotes.filter(n => n._id !== id),\r\n        editorState: EditorState.createEmpty(),\r\n        selectedNote: null,\r\n        title: \"\"\r\n      });\r\n      this.props.history.replace(\"/notes\");\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      editorState,\r\n      allNotes,\r\n      searchQuery,\r\n      collections,\r\n      selectedNote,\r\n      title\r\n    } = this.state;\r\n\r\n    if (!allNotes || !collections) return <div></div>;\r\n\r\n    return (\r\n      <div className=\"app-page\">\r\n        <SideBar\r\n          editorState={editorState}\r\n          allNotes={allNotes}\r\n          onSearch={this.handleSearch}\r\n          searchQuery={searchQuery}\r\n          onClear={this.handleClear}\r\n          collections={collections}\r\n          selectedNote={selectedNote}\r\n          updateCollections={this.updateCollections}\r\n        />\r\n        <DraftEditor\r\n          onEditorChange={this.onEditorChange}\r\n          handleTitle={this.handleTitle}\r\n          title={title}\r\n          save={this.save}\r\n          handleDelete={this.handleDelete}\r\n          updateSelectedNote={this.updateSelectedNote}\r\n          collections={collections}\r\n          editorState={editorState}\r\n          selectedNote={selectedNote}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notes;\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { login } from \"../../services/auth\";\r\nimport \"./login.css\";\r\n\r\nconst Login = ({ user, updateUser }) => {\r\n  let [email, setEmail] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n\r\n  const handleLogin = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      let newUser = await login(email, password);\r\n      if (newUser) {\r\n        updateUser(newUser);\r\n      }\r\n    } catch (error) {\r\n      toast.error(error);\r\n    }\r\n  };\r\n\r\n  if (user) return <Redirect to=\"/notes\" />;\r\n\r\n  return (\r\n    <div className=\"background\">\r\n      <div className=\"masthead\">\r\n        <div id=\"masthead-heading\" className=\"container\">\r\n          <h1 className=\"display-4\">\r\n            Welcome back to <b>Notable</b>.\r\n          </h1>\r\n          <h3>\r\n            <em>A simple note-taking application.</em>\r\n          </h3>\r\n        </div>\r\n\r\n        <form id=\"signUpForm\" className=\"container\" onSubmit={handleLogin}>\r\n          <div className=\"form-group\">\r\n            <label>Email address</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              className=\"form-control\"\r\n              id=\"signUpEmail\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Email\"\r\n              required\r\n              maxLength=\"50\"\r\n              title=\"Email address is required\"\r\n              onChange={e => setEmail(e.target.value)}\r\n              value={email}\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              className=\"form-control\"\r\n              id=\"signUpPassword\"\r\n              placeholder=\"Password\"\r\n              required\r\n              minLength=\"8\"\r\n              onChange={e => setPassword(e.target.value)}\r\n              value={password}\r\n            />\r\n            <small id=\"passwordHelp\" className=\"form-text text-muted\">\r\n              Minimum length: 8 characters\r\n            </small>\r\n          </div>\r\n\r\n          <button type=\"submit\" form=\"signUpForm\" className=\"btn btn-primary\">\r\n            Login\r\n          </button>\r\n          <div className=\"float-right\">\r\n            <Link to=\"/register\">Need to register? Click here.</Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { register } from \"../../services/auth\";\r\n\r\nimport \"./login.css\";\r\n\r\nconst Register = ({ user, updateUser }) => {\r\n  let [email, setEmail] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n\r\n  const handleRegister = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      let newUser = await register(email, password);\r\n      if (newUser) {\r\n        updateUser(newUser);\r\n      }\r\n    } catch (error) {\r\n      toast.error(error);\r\n    }\r\n  };\r\n\r\n  if (user) return <Redirect to=\"/notes\" />;\r\n\r\n  return (\r\n    <div className=\"background\">\r\n      <div className=\"masthead\">\r\n        <div id=\"masthead-heading\" className=\"container\">\r\n          <h1 className=\"display-4\">\r\n            Welcome to <b>Notable</b>.\r\n          </h1>\r\n          <h3>\r\n            <em>A simple note-taking application.</em>\r\n          </h3>\r\n        </div>\r\n\r\n        <form id=\"signUpForm\" className=\"container\" onSubmit={handleRegister}>\r\n          <div className=\"form-group\">\r\n            <label>Email address</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              className=\"form-control\"\r\n              id=\"signUpEmail\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Email\"\r\n              required\r\n              maxLength=\"50\"\r\n              title=\"Email address is required\"\r\n              onChange={e => setEmail(e.target.value)}\r\n              value={email}\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              className=\"form-control\"\r\n              id=\"signUpPassword\"\r\n              placeholder=\"Password\"\r\n              required\r\n              minLength=\"8\"\r\n              onChange={e => setPassword(e.target.value)}\r\n              value={password}\r\n            />\r\n            <small id=\"passwordHelp\" className=\"form-text text-muted\">\r\n              Minimum length: 8 characters\r\n            </small>\r\n          </div>\r\n\r\n          <button type=\"submit\" form=\"signUpForm\" className=\"btn btn-primary\">\r\n            Register\r\n          </button>\r\n          <div className=\"float-right\">\r\n            <Link to=\"/login\">Already registered? Click here.</Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Notes from \"./components/Notes\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Register from \"./components/Login/Register\";\r\nimport { validateUser } from \"./services/auth\";\r\nimport AppContext from \"./context/AppContext\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport \"./css/App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      receivedAsyncData: false\r\n    };\r\n\r\n    this.updateUser = this.updateUser.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const user = await validateUser();\r\n      this.setState({ user, receivedAsyncData: true });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  updateUser = user => {\r\n    this.setState({ user });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.receivedAsyncData) return <div>loading...</div>;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <AppContext.Provider\r\n          value={{\r\n            user: this.state.user,\r\n            updateUser: this.updateUser\r\n          }}\r\n        >\r\n          <ToastContainer />\r\n          <NavBar />\r\n          <main className=\"app-background\">\r\n            <Switch>\r\n              <Route\r\n                path=\"/notes/:id\"\r\n                render={props => (\r\n                  <Notes\r\n                    user={this.state.user}\r\n                    updateUser={this.updateUser}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/notes\"\r\n                render={props => (\r\n                  <Notes\r\n                    user={this.state.user}\r\n                    updateUser={this.updateUser}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/login\"\r\n                render={props => (\r\n                  <Login\r\n                    user={this.state.user}\r\n                    updateUser={this.updateUser}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/register\"\r\n                render={props => (\r\n                  <Register\r\n                    user={this.state.user}\r\n                    updateUser={this.updateUser}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Redirect from=\"/\" exact to=\"/notes\" />\r\n            </Switch>\r\n          </main>\r\n        </AppContext.Provider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/js/dist/collapse\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}